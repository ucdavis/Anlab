@using Humanizer
@model AnlabMvc.Models.Order.OrderReviewModel

@{
    ViewData["Title"] = "Confirmation";
}

<form method="post" asp-controller="Lab" enctype="multipart/form-data" asp-action="Finalize" asp-route-id="@Model.Order.Id">
    
    <div class="form-group">
        <span>Upload Results</span>
        @if (string.IsNullOrWhiteSpace(Model.Order.ResultsFileIdentifier))
        {
            <input id="UploadFile" type="file" class="form-control" name="UploadFile" required/>
        }
        else
        {
            <div>Results File Identifier: @Model.Order.ResultsFileIdentifier</div>
        }
        <span>Add Lab Comments</span>
        <textarea class="form-control" name="LabComments"></textarea>
        <span>Adjust Final Total:</span>
        <input type="hidden" class="form-control" id="prevTotal" value="@Model.OrderDetails.Total"/>
        <input type="text" class="form-control" id="GrandTotal" value="@Model.OrderDetails.Total" autocomplete="off"/>
        <div>Current Total: $@Model.OrderDetails.Total</div>
        <div>Adjustment Amount: $<span id="adjustAmt">@Model.OrderDetails.AdjustmentAmount</span></div>
        <input type="hidden" class="form-control" id="adjustmentAmount" name="AdjustmentAmount" value="0"/>
    </div>
    

    @Html.Hidden("Confirm", true)
    <button type="submit" class="btn btn-primary"><i class="fa fa-check" aria-hidden="true"> Confirm Completed (Update Tests from Labworks)</i></button>
</form>

@Html.Partial("_OrderDetails")

@section AdditionalStyles
{
    @{ await Html.RenderPartialAsync("_DataTableStylePartial"); }
}

@section Scripts
{
    @{ await Html.RenderPartialAsync("_DataTableScriptsPartial"); }

    <script type="text/javascript">
        $(function() {
            $("#table").dataTable();
        });
    </script>

    <script type="text/javascript">
        $('#GrandTotal').on('keyup', function () {
            var prevTotal = $('#prevTotal').val();
            var grandTotal = $(this).val();
            if (grandTotal)
                var adjustAmt = parseFloat(grandTotal) - parseFloat(prevTotal);
            else
                var adjustAmt = 0;
            $('#adjustmentAmount').val(adjustAmt);
            $('#adjustAmt').html(adjustAmt);
        });

        $('#UploadFile').on('change', function () {
            var upload = $("#UploadFile");           
            var fullFileName = upload.val().replace(/^.*[\\\/]/, '').toUpperCase();
            var fileName = fullFileName.replace(/\.[^/.]+$/, "");
            var extension = fullFileName.split('.').pop();
            
            var error = "";
            if (extension !== 'XLS' && extension !== 'XLSX') {
                error = "Only XLS and XLSX files can be uploaded";
            }
            var expectedFileName = '@Model.Order.RequestNum'.toUpperCase();
            if (fileName.indexOf(expectedFileName) === -1) {
                error = "File name did not include request number: " + "@Model.Order.RequestNum";
            }
            upload[0].setCustomValidity(error);
            
        });
    </script>
                                                                  
    @{ await Html.RenderPartialAsync("_ShowdownScriptsPartial"); }
}