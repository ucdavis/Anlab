@model AnlabMvc.Models.Order.OrderReceiptModel

@{
    ViewBag.Title = "Receipt";
}

@section ActionButtons
    {
    <p>
        <a asp-action="Link" asp-route-id="@Model.Order.ShareIdentifier" class="btn btn-default">Back to Results</a>
        <a href="#" class="btn btn-default" type="button" onclick="window.print()">Print this page</a>
    </p>
}

<div style="width: 100%">
    <div class="form-group">
        <h4>Payment Information</h4>
        <table class="avoidBreak ">
            <thead>
                <tr>
                    <th style="width: 8em;"></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><strong>Approved Amount:</strong></td>
                    <td>@Model.ApprovedAmount</td>
                </tr>
                <tr>
                    <td><strong>Card Number:</strong></td>
                    <td>@Model.MaskedCreditCard</td>
                </tr>
            </tbody>
        </table>

    </div>

    @if (!string.IsNullOrWhiteSpace(Model.OrderDetails.LabComments))
    {

        <div class="form-group">
            <h4>Lab Comments</h4>
            <div class="well well-sm" style="white-space: pre-wrap">@Model.OrderDetails.LabComments</div>
        </div>

    }

    @if (Model.OrderDetails.RushMultiplier.HasValue && Model.OrderDetails.RushMultiplier.Value > 1)
    {
        <div class="form-group">
            <h4>RUSH</h4>
            <div>This order is a rush and has the cost increased by a factor of @Model.OrderDetails.RushMultiplier</div>
        </div>
    }

    <table class="table avoidBreak">
        <thead>
            <tr>
                <th>Analysis</th>
                <th>
                    SOP
                </th>
                <th>
                    Price
                    <i class="analysisTooltip fa fa-info-circle"
                       aria-hidden="true"
                       data-toggle="tooltip"
                       title="Fee Per Sample * Quantity" />
                </th>
                <th>Setup</th>
                <th>
                    Total
                    <i class="analysisTooltip fa fa-info-circle"
                       aria-hidden="true"
                       data-toggle="tooltip"
                       title="Price + Setup" />
                </th>
            </tr>
        </thead>
        <tbody>
            @{ var hiddenCosts = 0M; }
            @foreach (var test in @Model.OrderDetails.SelectedTests)
            {

                var temp = Model.Order.GetTestDetails().Where(a => a.Id == test.Id).FirstOrDefault();
                if (!temp.Public)
                {
                    hiddenCosts += test.Total;
                    continue;
                }
                <tr>
                    <td>
                        @test.Analysis
                        @if (temp != null && !string.IsNullOrEmpty(temp.Notes))
                        {
                            <i class="analysisTooltip fa fa-info-circle" onshow="renderTitle('@temp.Notes')" title="@temp.Notes" aria-hidden="true" data-toggle="tooltip" data-html="true"></i>
                        }
                    </td>
                    <td>

                        @if (temp.Sop == null || temp.Sop == "0")
                        {
                            <span>---</span>
                        }
                        else
                        {
                            <a asp-controller="Analysis" asp-action="@Model.OrderDetails.SampleType" asp-route-id="@temp.Sop" target="_blank">@temp.Sop</a>
                        }

                    </td>
                    <td>@test.SubTotal.ToString("C")</td>
                    <td>@test.SetupCost.ToString("C")</td>
                    <td>@test.Total.ToString("C")</td>
                </tr>
            }
        </tbody>
        <tfoot class="avoidBreak">
            <tr>
                <th>Processing Fee</th>
                <td colSpan="3" />
                <td>
                    @if (Model.OrderDetails.Payment.IsInternalClient)
                    {
                        <span>@(string.Format("{0:C}", Model.OrderDetails.InternalProcessingFee))</span>
                    }
                    else
                    {
                        <span>@(string.Format("{0:C}", Model.OrderDetails.ExternalProcessingFee))</span>
                    }
                </td>
            </tr>
            @if (hiddenCosts > 0M)
            {
                <tr>
                    <th>Other Costs</th>
                    <td colSpan="3" />
                    <td><span>@(string.Format("{0:C}", hiddenCosts))</span></td>
                </tr>
            }
            @if (Model.OrderDetails.AdjustmentAmount != 0)
            {
                <tr>
                    <td colSpan="4"><strong>Adjustment Amount</strong> <span class="pull-right">@Model.OrderDetails.AdjustmentComments</span></td>
                    <td><span>@(string.Format("{0:C}", Model.OrderDetails.AdjustmentAmount))</span></td>
                </tr>

            }
            <tr>
                <th>Total Amount</th>
                <td colSpan="3" />
                <th><span>@(string.Format("{0:C}", Model.OrderDetails.GrandTotal))</span></th>
            </tr>
        </tfoot>
    </table>
</div>


@section AdditionalStyles
    {

    @*don't use the partial async print style here didn't work*@
    @await Html.PartialAsync("_PrintStyle")

    <style media="screen">

        table {
            width: 100%;
        }

        th {
            padding: 5px;
        }

        td {
            padding: 5px;
        }

        .onlyPrint {
            display: none !important;
        }

        .tight-table td {
            padding: 2px;
        }

        .tight-table th {
            padding: 1px;
            padding-top: 1px;
        }
    </style>
}
@section Scripts
    {
    @await Html.PartialAsync("_PrintScript")
}

