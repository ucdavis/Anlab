# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

# name is used for the variable $(build.buildNumber)
name: 1.0.$(Date:yyMM).$(build.buildId)

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  npm_config_cache: $(Pipeline.Workspace)/.npm
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages

stages:
- stage: BuildTestAndPublish
  jobs:
  - job: BuildTestAndPublish
    steps:

    - task: UseDotNet@2
      displayName: 'Use .NET Core 3.1.11 sdk'
      inputs:
        packageType: sdk
        version: 3.1.405
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | **/package-lock.json'
        restoreKeys: |
           npm | "$(Agent.OS)"
           npm
        path: $(npm_config_cache)
        cacheHitVar: NPM_CACHE_RESTORED
      displayName: Cache npm

    - script: npm ci --cache $(npm_config_cache)
      workingDirectory: './Anlab.MVC'
      condition: ne(variables.NPM_CACHE_RESTORED, 'true')
      displayName: 'Install npm dependencies'

    - task: NuGetToolInstaller@1

    - task: Cache@2
      inputs:
        key: 'nuget | "$(Agent.OS)" | **/packages.lock.json,!**/bin/**'
        restoreKeys: |
           nuget | "$(Agent.OS)"
        path: $(NUGET_PACKAGES)
        cacheHitVar: NUGET_CACHE_RESTORED
      displayName: Cache NuGet packages

    - task: NuGetCommand@2
      condition: ne(variables.NUGET_CACHE_RESTORED, 'true')
      inputs:
        restoreSolution: '$(solution)'

    - task: DotNetCoreCLI@2
      displayName: 'Build Anlab.Mvc'
      inputs:
        command: 'build'
        projects: './Anlab.Mvc/AnlabMvc.csproj'
        arguments: '--configuration $(BuildConfiguration) /property:Version=$(build.buildNumber)'

    - task: DotNetCoreCLI@2
      displayName: 'Run Server Tests'
      inputs:
        command: 'test'

    - task: Npm@1
      displayName: 'npm test'
      inputs:
        command: 'custom'
        workingDir: 'Anlab.MVC'
        customCommand: 'test'

    - task: DotNetCoreCLI@2
      displayName: 'Publish Anlab.Mvc'
      inputs:
        command: 'publish'
        publishWebProjects: true
        zipAfterPublish: true
        modifyOutputPath: false
        nobuild: true
        projects: './Anlab.Mvc/AnlabMvc.csproj'
        arguments: '--no-restore --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/AnlabMvc'

    - task: DotNetCoreCLI@2
      displayName: 'Publish Anlab.Jobs.MoneyMovement'
      inputs:
        command: 'publish'
        publishWebProjects: false
        zipAfterPublish: true
        modifyOutputPath: false
        nobuild: true
        projects: './Anlab.Jobs.MoneyMovement/Anlab.Jobs.MoneyMovement.csproj'
        arguments: '--no-restore --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/Anlab.Jobs.MoneyMovement'

    - task: DotNetCoreCLI@2
      displayName: 'Publish Anlab.Jobs.SendMail'
      inputs:
        command: 'publish'
        publishWebProjects: false
        zipAfterPublish: true
        modifyOutputPath: false
        nobuild: true
        projects: './Anlab.Jobs.SendMail/Anlab.Jobs.SendMail.csproj'
        arguments: '--no-restore --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/Anlab.Jobs.SendMail'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
